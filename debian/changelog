rust-pxar (0.10.2-1) unstable; urgency=medium

  * don't hold a temporary buffer mutex across await point

  * fix EntryKind for fifo and sockets in the random accessor

  * derive PartialEq on various archive metadata structs

  * clippy fixups

 -- Proxmox Support Team <support@proxmox.com>  Thu, 27 Oct 2022 15:26:54 +0200

rust-pxar (0.10.1-1) unstable; urgency=medium

  * add 'contents' and 'content_size' to aio decoder interface

  * flush the output in Encoder::finish

 -- Proxmox Support Team <support@proxmox.com>  Wed, 31 Mar 2021 13:54:38 +0200

rust-pxar (0.10.0-1) unstable; urgency=medium

  * StatxTimestamp is now explicitly padded with zeroes to avoid situations
    where uninitialized bytes could end up being written out along with it

 -- Proxmox Support Team <support@proxmox.com>  Fri, 12 Mar 2021 10:37:18 +0100

rust-pxar (0.9.0-1) unstable; urgency=medium

  * Nesting now doesn't use trait objects but non-stacking borrows, therefore
    they get the type parameter passed along, which is a major API change.

 -- Proxmox Support Team <support@proxmox.com>  Wed, 17 Feb 2021 09:53:21 +0100

rust-pxar (0.8.0-1) unstable; urgency=medium

  * fix method naming: `from_futures` -> `from_tokio`

  * ensure `Encoder` is `Send`

 -- Proxmox Support Team <support@proxmox.com>  Tue, 02 Feb 2021 10:49:50 +0100

rust-pxar (0.7.0-1) unstable; urgency=medium

  * update to tokio 1.0

  * remove futures-io feature

 -- Proxmox Support Team <support@proxmox.com>  Thu, 14 Jan 2021 15:21:54 +0100

rust-pxar (0.6.2-1) unstable; urgency=medium

  * fix error trying decode "special files" (fifos, sockets) using the random
    access decoder

 -- Proxmox Support Team <support@proxmox.com>  Tue, 15 Dec 2020 13:08:34 +0100

rust-pxar (0.6.1-1) unstable; urgency=medium

  * Decoder<StandardReader<T>>: allow access to input

 -- Proxmox Support Team <support@proxmox.com>  Fri, 18 Sep 2020 11:34:55 +0200

rust-pxar (0.6.0-1) pve; urgency=medium

  * let the encoder's finish() method return the inner writer

  * add `into_writer()` encoder method to "cancel" a directory and get the
    writer without finishing up the goodbye table

 -- Proxmox Support Team <support@proxmox.com>  Thu, 27 Aug 2020 12:11:39 +0200

rust-pxar (0.5.0-2) pve; urgency=medium

  * packaging fixup

 -- Proxmox Support Team <support@proxmox.com>  Tue, 25 Aug 2020 12:45:27 +0200

rust-pxar (0.5.0-1) pve; urgency=medium

  * finally completely rename format::Entry to format::Stat, also Entry_V1 to
    Stat_V1

  * add Metadata::builder_from_stat

  * add MetadataBuilder::fill_from_stat

 -- Proxmox Support Team <support@proxmox.com>  Tue, 25 Aug 2020 12:25:32 +0200

rust-pxar (0.4.0-1) pve; urgency=medium

  * remove poll_close and poll_position from SeqWrite trait

 -- Proxmox Support Team <support@proxmox.com>  Mon, 24 Aug 2020 11:54:19 +0200

rust-pxar (0.3.0-1) pve; urgency=medium

  * introduce 96 bit time stamp type with support for negative timestamps

  * introduce PXAR_ENTRY version 2 header type

 -- Proxmox Support Team <support@proxmox.com>  Tue, 28 Jul 2020 11:56:47 +0200

rust-pxar (0.2.1-1) pve; urgency=medium

  * sync encoder: fix metadata lifetime leaking into encoder

  * add builder for metadata

  * add initial data testsuite

  * minor rustc version compatibility improvement

  * implement ReadAt for byte slices

  * fix maximum allowed size check for acl group objects (found via a clippy lint)

  * fix various clippy lints

 -- Proxmox Support Team <support@proxmox.com>  Thu, 16 Jul 2020 11:41:49 +0200

rust-pxar (0.2.0-1) pve; urgency=medium

  * Archive format compatibility breakage:

  * All constants used in the pxar format have now been recomputed from
    strings of the form `__PROXMOX_FORMAT_<header-type>__`, the hash keys used
    for the sip hasher come from the sha1sum of `PROXMOX ARCHIVE FORMAT`.

  * This is a clear cut from the catar format now, since we're not really
    using just a subset anymore, but also slightly different (due to hardlink
    support and thereby also dropped composability of the format).

 -- Proxmox Support Team <support@proxmox.com>  Thu, 25 Jun 2020 09:39:15 +0200

rust-pxar (0.1.9-1) pve; urgency=medium

  * more useful/correct ReadAt trait definition

 -- Proxmox Support Team <support@proxmox.com>  Wed, 24 Jun 2020 11:55:50 +0200

rust-pxar (0.1.8-1) pve; urgency=medium

  * fix a bug with encoding device files

 -- Proxmox Support Team <support@proxmox.com>  Mon, 22 Jun 2020 11:05:52 +0200

rust-pxar (0.1.7-1) pve; urgency=medium

  * add some safety checks

  * fix search for Entry header in hardlinks (don't mess with internal decoder
    state for this)

 -- Proxmox Support Team <support@proxmox.com>  Mon, 15 Jun 2020 10:35:27 +0200

rust-pxar (0.1.6-1) pve; urgency=medium

  * refuse illegal file names in encoder/decoder/accessor

  * use a shared 1M file copy buffer

 -- Proxmox Support Team <support@proxmox.com>  Mon, 08 Jun 2020 13:55:14 +0200

rust-pxar (0.1.5-1) pve; urgency=medium

  * fixup hardlink encoding

 -- Proxmox Support Team <support@proxmox.com>  Mon, 08 Jun 2020 10:08:06 +0200

rust-pxar (0.1.4-1) pve; urgency=medium

  * remove LinkOffset from some file types
  * change API for hardlink following
  * properly interpret hardlink offsets relative in the decoder

 -- Proxmox Support Team <support@proxmox.com>  Fri, 05 Jun 2020 16:23:21 +0200

rust-pxar (0.1.3-1) pve; urgency=medium

  * introduce LinkOffset which is used to create hardlinks

 -- Proxmox Support Team <support@proxmox.com>  Fri, 05 Jun 2020 14:00:51 +0200

rust-pxar (0.1.2-1) pve; urgency=medium

  * update hardlink format

 -- Proxmox Support Team <support@proxmox.com>  Fri, 05 Jun 2020 12:20:44 +0200

rust-pxar (0.1.1-1) pve; urgency=medium

  * change acl Permissions to be just a u64 instead of a bitfield

 -- Proxmox Support Team <support@proxmox.com>  Thu, 04 Jun 2020 11:26:19 +0200

rust-pxar (0.1.0-1) pve; urgency=medium

  * initial release

 -- Proxmox Support Team <support@proxmox.com>  Wed, 03 Jun 2020 12:34:49 +0200
